<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
    </processDefinitionPK>
    <processDescription>TESTE CONTAS A PAGAR COMISSOES</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>true</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>COMISSOES</categoryId>
    <managerEngineAllocationId></managerEngineAllocationId>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>1</complementsLevel>
    <notifyRequisitionerComplements>true</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>true</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
      <version>12</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>10777991</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>4</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>140</positionX>
      <positionY>76</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>12</sequence>
      </processStatePK>
      <stateName>Confere Informações</stateName>
      <stateDescription>Confere Informações</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;CONTAS_A_PAGAR&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>3600</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>3600</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>160</positionX>
      <positionY>240</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>14</sequence>
      </processStatePK>
      <stateName>Verifica Inconsistência</stateName>
      <stateDescription>Verifica Inconsistência</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;4&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>430</positionX>
      <positionY>42</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>17</sequence>
      </processStatePK>
      <stateName>Confere os Dados Fiscais</stateName>
      <stateDescription>Confere os Dados Fiscais</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;FISCAL&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>390</positionX>
      <positionY>510</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>20</sequence>
      </processStatePK>
      <stateName>Processa Pagamento</stateName>
      <stateDescription>Processa Pagamento</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;CONTAS_A_PAGAR&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>560</positionX>
      <positionY>270</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>24</sequence>
      </processStatePK>
      <stateName>Decisão</stateName>
      <stateDescription>Decisão</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>410</positionX>
      <positionY>263</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>30</sequence>
      </processStatePK>
      <stateName>Decisão</stateName>
      <stateDescription>Decisão</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>240</positionX>
      <positionY>440</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>35</sequence>
      </processStatePK>
      <stateName>Decisão</stateName>
      <stateDescription>Decisão</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>760</positionX>
      <positionY>250</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>22</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>710</positionX>
      <positionY>120</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <expressionOrder>1</expressionOrder>
        <version>12</version>
        <sequence>24</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;idAprovado&quot;)== &apos;2&apos;</condition>
      <destinationSequenceId>14</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;4&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <expressionOrder>2</expressionOrder>
        <version>12</version>
        <sequence>24</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;idAprovado&quot;)== &apos;1&apos;</condition>
      <destinationSequenceId>17</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;FISCAL&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <expressionOrder>1</expressionOrder>
        <version>12</version>
        <sequence>30</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;idAprovadorFiscal&quot;) == &apos;2&apos;</condition>
      <destinationSequenceId>12</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;CONTAS_A_PAGAR&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <expressionOrder>2</expressionOrder>
        <version>12</version>
        <sequence>30</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;idAprovadorFiscal&quot;) == &apos;1&apos;</condition>
      <destinationSequenceId>20</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;CONTAS_A_PAGAR&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <expressionOrder>1</expressionOrder>
        <version>12</version>
        <sequence>35</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;idAprovadoPagamento&quot;) == &apos;1&apos;</condition>
      <destinationSequenceId>22</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;4&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <expressionOrder>2</expressionOrder>
        <version>12</version>
        <sequence>35</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;idAprovadoPagamento&quot;) == &apos;2&apos;</condition>
      <destinationSequenceId>17</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;FISCAL&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>25</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>12</initialStateSequence>
      <finalStateSequence>24</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>27</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>24</initialStateSequence>
      <finalStateSequence>17</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>28</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>24</initialStateSequence>
      <finalStateSequence>14</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>29</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>14</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>31</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>17</initialStateSequence>
      <finalStateSequence>30</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>32</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>30</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>33</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>30</initialStateSequence>
      <finalStateSequence>20</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>34</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>4</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>36</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>20</initialStateSequence>
      <finalStateSequence>35</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>37</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>35</initialStateSequence>
      <finalStateSequence>22</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <linkSequence>38</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>35</initialStateSequence>
      <finalStateSequence>17</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterTaskComplete</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterTaskComplete(colleagueId,nextSequenceId,userList){&#xd;
&#xd;
&#xd;
	var ativAtual   = getValue(&quot;WKNumState&quot;);	&#xd;
	var processo    = getValue(&quot;WKNumProces&quot;);    &#xd;
    var usuario     = getValue(&quot;WKUser&quot;);&#xd;
    var numcompany  = new java.lang.Integer(getValue(&quot;WKCompany&quot;)); &#xd;
	var calendar    = java.util.Calendar.getInstance();&#xd;
	//prod&#xd;
    var folderId    = 10778646;&#xd;
	//MUDEI PARA A PASTA QUE CRIEI - HENRIQUE&#xd;
    //var folderId    = 2876596;&#xd;
    /* 1710338; */ /*DESENV*/ /* número do caminho a ser criada as pastas */&#xd;
	var senha       = getValue(&quot;WKUserPassword&quot;);&#xd;
	var ano         = hAPI.getCardValue(&quot;IdAno&quot;); &#xd;
	var mes         = hAPI.getCardValue(&quot;IdMes&quot;); &#xd;
	var fornec      = hAPI.getCardValue(&quot;EmpresaPag&quot;);&#xd;
	var nfEletron   = hAPI.getCardValue(&quot;Eletron&quot;);&#xd;
	var NF8hfiscal   = hAPI.getCardValue(&quot;NF8hfiscal&quot;);&#xd;
	&#xd;
	// PRE&#xd;
	var LOGININTEGRADOR = &quot;intmobtemp&quot;;&#xd;
	var USERCODEINTEGRADOR = &quot;intmobtemp&quot;;&#xd;
	var PASSWORDINTEGRADOR = &quot;Adminportal!1&quot;;&#xd;
	&#xd;
	// DESENV&#xd;
    //var LOGININTEGRADOR = &quot;JV.TDI.PORTAIS@totvs.com.br&quot;;&#xd;
    //var USERCODEINTEGRADOR = &quot;JV.TDI.PORTAIS&quot;;&#xd;
     //var PASSWORDINTEGRADOR = &quot;Adminportal!1&quot;;&#xd;
	&#xd;
	log.info(&quot;JuckENTROU EM AFTERTASKCOMPLETE ============== &quot; + ativAtual + &quot; - &quot; + processo + &quot; - &quot; + usuario + &quot; - &quot; + numcompany + &quot; - &quot; + nextSequenceId + &quot; senha...:&quot; + senha);&#xd;
	&#xd;
	if(ativAtual == 10 &amp;&amp; nextSequenceId == 1){&#xd;
		log.info(&quot;Irá enviar email ============== &quot; );&#xd;
		sendEmail();&#xd;
	}&#xd;
&#xd;
	if (ativAtual == 22)  {&#xd;
&#xd;
		&#xd;
		log.info(&quot;ATIVIDADE 27777777777777777777777777777777777777777777777&quot;);&#xd;
		&#xd;
	    // Busca doctos anexados ao processo&#xd;
		try&#xd;
		{&#xd;
			/*var toolkitServiceProvider = ServiceManager.getServiceInstance(&quot;toolkit&quot;);&#xd;
			var toolkitServiceLocator = toolkitServiceProvider.instantiate(&quot;com.datasul.ecm.webservices.ToolKitServiceServiceLocator&quot;);&#xd;
			var toolkitService = toolkitServiceLocator.getToolKitServicePort();*/&#xd;
			var listDocuments = hAPI.listAttachments();&#xd;
		}&#xd;
		catch(e){&#xd;
			log.info(&quot;erro ao tentar acessar a lista de documentos - listattachments: &quot; + e.message);&#xd;
			hAPI.setCardValue(&quot;idErro&quot;,&quot;Erro ao tentar acessar a lista de documentos - listattachments:,verifique se os arquivos do processo foram anexados na estrutura VP Administrativa Financeira / CST / Adm de Contratos de Fornecedores / BASE PARA FORMULÁRIOS / FORMULÁRIOS/... &quot; +&#xd;
					&quot;Caso não tenha publicado os anexos, contate a área de Atendimento FLUIG.&quot;);&#xd;
			return;&#xd;
		}&#xd;
&#xd;
		try&#xd;
		{&#xd;
	        var documentServiceProviderFolder = ServiceManager.getServiceInstance(&quot;FolderService&quot;);&#xd;
	    	//DES&#xd;
	        var documentServiceLocatorFolder = documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.ECMFolderServiceServiceLocator&quot;);&#xd;
       	    //var documentServiceLocatorFolder = documentServiceProviderFolder.instantiate(&quot;com.datasul.technology.webdesk.dm.ws.FolderServiceServiceLocator&quot;);  /* PRODUÇÃO */&#xd;
	 		var documentServiceFolder = documentServiceLocatorFolder.getFolderServicePort();&#xd;
		}&#xd;
		catch(e){&#xd;
			log.info(&quot;erro ao tentar acessar o serviço FolderService: &quot; + e.message);&#xd;
			hAPI.setCardValue(&quot;idErro&quot;,&quot;Erro ao tentar acessar o serviço FolderService, verifique se os arquivos do processo foram anexados na estrutura VP Administrativa Financeira / CST / Adm de Contratos de Fornecedores / BASE PARA FORMULÁRIOS / FORMULÁRIOS/...&quot; +&#xd;
					&quot;Caso não tenha publicado os anexos, contate a área de Atendimento FLUIG.&quot;);&#xd;
			return;&#xd;
		}&#xd;
&#xd;
&#xd;
		// Busca o webservices de documentos&#xd;
		 &#xd;
		try&#xd;
		{&#xd;
			var documentServiceProvider = ServiceManager.getServiceInstance(&quot;DocumentService&quot;);&#xd;
			//DES&#xd;
			var documentServiceLocator = documentServiceProvider.instantiate(&quot;com.totvs.technology.ecm.dm.ws.ECMDocumentServiceServiceLocator&quot;);&#xd;
			//var documentServiceLocator = documentServiceProvider.instantiate(&quot;com.datasul.technology.webdesk.dm.ws.DocumentServiceServiceLocator&quot;);	  /* PRODUÇÃO */	&#xd;
			var documentService = documentServiceLocator.getDocumentServicePort();&#xd;
		}	&#xd;
		catch(e){&#xd;
			log.info(&quot;erro ao tentar acessar o serviço DocumentService: &quot; + e.message);&#xd;
			hAPI.setCardValue(&quot;idErro&quot;, &quot;Erro ao tentar acessar o serviço DocumentService,verifique se os arquivos do processo foram anexados na estrutura VP Administrativa Financeira / CST / Adm de Contratos de Fornecedores / BASE PARA FORMULÁRIOS / FORMULÁRIOS/...&quot; +&#xd;
					&quot;Caso não tenha publicado os anexos, contate a área de Atendimento FLUIG.&quot;);&#xd;
			return;&#xd;
			&#xd;
		}&#xd;
			&#xd;
&#xd;
		if (listDocuments.size() &gt; 0) {   &#xd;
&#xd;
			var document = new Array( );&#xd;
&#xd;
			var doc =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentDto&quot;);&#xd;
			&#xd;
			log.info(&quot;DEPOIS DO DocumentDto ============== &quot; );&#xd;
&#xd;
			var temp;&#xd;
&#xd;
			var expires = false;&#xd;
&#xd;
			var notify = false;&#xd;
&#xd;
			var topic;&#xd;
&#xd;
			var attach;&#xd;
&#xd;
			var attachArray;&#xd;
&#xd;
			var security;&#xd;
&#xd;
			var version;&#xd;
&#xd;
			var listAttach = new Array( );&#xd;
&#xd;
&#xd;
&#xd;
			/* verifica se já existe pasta para ano competência*/&#xd;
&#xd;
			var c1 = DatasetFactory.createConstraint(&quot;parentDocumentId&quot;, folderId,folderId,ConstraintType.MUST);&#xd;
&#xd;
			var c2 = DatasetFactory.createConstraint(&quot;documentDescription&quot;, ano,ano,ConstraintType.MUST);&#xd;
&#xd;
			var c3 = DatasetFactory.createConstraint(&quot;activeVersion&quot;, &quot;true&quot;,&quot;true&quot;,ConstraintType.MUST);&#xd;
&#xd;
			var constraints = new Array(); &#xd;
&#xd;
			constraints.push(c1);&#xd;
&#xd;
			constraints.push(c2);&#xd;
&#xd;
			constraints.push(c3);&#xd;
&#xd;
			var pastaAno = DatasetFactory.getDataset(&quot;document&quot;, null, constraints, null);&#xd;
&#xd;
&#xd;
	        if(pastaAno){&#xd;
&#xd;
				log.info(&quot;entrou pasta ano.../ano:&quot; + ano);&#xd;
&#xd;
				if(pastaAno.values.length &gt; 0){&#xd;
&#xd;
					var anoParentId  = pastaAno.getValue(0,&quot;documentPK.documentId&quot;);&#xd;
&#xd;
					var anoNomePasta = pastaAno.getValue(0,&quot;documentDescription&quot;);&#xd;
&#xd;
					folderId     = anoParentId;&#xd;
&#xd;
					log.info(&quot;Valor do folderId/anoParentId/descricao...:&quot; + folderId + &quot; - &quot; + anoParentId + &quot; - &quot; + anoNomePasta);	&#xd;
&#xd;
				}&#xd;
&#xd;
				else{&#xd;
&#xd;
				&#xd;
&#xd;
					/* Cria a pasta com descrição do Ano de competência */&#xd;
&#xd;
					doc.setDocumentId(0);&#xd;
&#xd;
					doc.setVersion(0);&#xd;
&#xd;
					doc.setParentDocumentId(folderId); // FIXO&#xd;
&#xd;
					doc.setDocumentDescription(ano);&#xd;
&#xd;
					doc.setAdditionalComments(&quot;Processo Nota Fiscal Pagamento&quot; );&#xd;
&#xd;
					doc.setDocumentKeyWord(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
					doc.setVersionDescription(&quot;\nProcesso:&quot; + processo);&#xd;
&#xd;
					doc.setDocumentTypeId(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
					doc.setExpires(false);&#xd;
&#xd;
					doc.setPublisherId(usuario);&#xd;
&#xd;
					doc.setIconId(23);&#xd;
&#xd;
					doc.setCompanyId(numcompany);&#xd;
&#xd;
					doc.setColleagueId(usuario);&#xd;
&#xd;
					doc.setApproved(true);&#xd;
&#xd;
					doc.setActiveVersion(true);&#xd;
&#xd;
					doc.setCreateDate(calendar);&#xd;
&#xd;
					doc.setDocumentType(&quot;1&quot;);&#xd;
&#xd;
					doc.setDocumentTypeId(&quot;1&quot;);&#xd;
&#xd;
					doc.setInheritSecurity(true);&#xd;
&#xd;
					doc.setTopicId(1);&#xd;
&#xd;
					doc.setUserNotify(false);&#xd;
&#xd;
					doc.setValidationStartDate(calendar);&#xd;
&#xd;
					doc.setVersionOption(&quot;0&quot;);&#xd;
&#xd;
					doc.setVolumeId(&quot;Default&quot;);			&#xd;
&#xd;
					document[0] = doc;&#xd;
&#xd;
&#xd;
&#xd;
					var docArray         =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentDtoArray&quot;);&#xd;
&#xd;
					var docArraySecurity =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentSecurityConfigDtoArray&quot;);&#xd;
&#xd;
					var docArrayApprover =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.ApproverDtoArray&quot;);&#xd;
&#xd;
					docArray.setItem(document);&#xd;
&#xd;
&#xd;
&#xd;
					// Cria o documento no Webdesk&#xd;
&#xd;
&#xd;
&#xd;
					log.info(&quot;CRIANDO DOCUMENTO...: &quot; + usuario + &quot; senha...: &quot; + senha);&#xd;
&#xd;
					var createDoc = documentServiceFolder.createFolder(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, docArray, docArraySecurity, docArrayApprover);&#xd;
&#xd;
					log.info(&quot;CRIADO&quot;);&#xd;
&#xd;
					log.info(createDoc);&#xd;
&#xd;
					var wsmano =  createDoc.getItem(0);&#xd;
&#xd;
					log.info(&quot;wsmDocumentIdAno&quot; + wsmano.getDocumentId());&#xd;
&#xd;
					log.info(&quot;wsmgetVersionAno&quot; + wsmano.getVersion());&#xd;
&#xd;
					folderId = wsmano.getDocumentId();&#xd;
&#xd;
				}&#xd;
&#xd;
			}	&#xd;
&#xd;
			&#xd;
&#xd;
			/* Verifica se já existe a pasta mês competência */&#xd;
&#xd;
			var c1 = DatasetFactory.createConstraint(&quot;parentDocumentId&quot;, folderId,folderId,ConstraintType.MUST);&#xd;
&#xd;
			var c2 = DatasetFactory.createConstraint(&quot;documentDescription&quot;, mes,mes,ConstraintType.MUST);&#xd;
&#xd;
			var c3 = DatasetFactory.createConstraint(&quot;activeVersion&quot;, &quot;true&quot;,&quot;true&quot;,ConstraintType.MUST);&#xd;
&#xd;
    		var constraints = new Array(); &#xd;
&#xd;
			constraints.push(c1);&#xd;
&#xd;
			constraints.push(c2);&#xd;
&#xd;
			constraints.push(c3);&#xd;
&#xd;
			&#xd;
&#xd;
			var pastaMes = DatasetFactory.getDataset(&quot;document&quot;, null, constraints, null);&#xd;
&#xd;
	        if(pastaMes){&#xd;
&#xd;
				log.info(&quot;entrou pasta mes&quot;);&#xd;
&#xd;
				if(pastaMes.values.length &gt; 0){&#xd;
&#xd;
					log.info(&quot;Valor do folderId...:&quot; + folderId);&#xd;
&#xd;
					var mesParentId  = pastaMes.getValue(0,&quot;documentPK.documentId&quot;);&#xd;
&#xd;
					var mesNomePasta = pastaMes.getValue(0,&quot;documentDescription&quot;);&#xd;
&#xd;
					folderId     = mesParentId;&#xd;
&#xd;
					log.info(&quot;Valor do folderId/mesParentId/descricao...:&quot; + folderId + &quot; - &quot; + mesParentId + &quot; - &quot; + mesNomePasta);	&#xd;
&#xd;
				}&#xd;
&#xd;
				else{&#xd;
&#xd;
					/* Cria a pasta com mês de competência */&#xd;
&#xd;
					doc.setDocumentId(0);&#xd;
&#xd;
					doc.setVersion(0);&#xd;
&#xd;
					doc.setParentDocumentId(folderId); // FIXO&#xd;
&#xd;
					doc.setDocumentDescription(mes);&#xd;
&#xd;
					doc.setAdditionalComments(&quot;Processo Nota Fiscal Pagamento&quot; );&#xd;
&#xd;
					doc.setDocumentKeyWord(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
					doc.setVersionDescription(&quot;\nProcesso:&quot; + processo);&#xd;
&#xd;
					doc.setDocumentTypeId(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
					doc.setExpires(false);&#xd;
&#xd;
					doc.setPublisherId(usuario);&#xd;
&#xd;
					doc.setIconId(23);&#xd;
&#xd;
					doc.setCompanyId(numcompany);&#xd;
&#xd;
					doc.setColleagueId(usuario);&#xd;
&#xd;
					doc.setApproved(true);&#xd;
&#xd;
					doc.setActiveVersion(true);&#xd;
&#xd;
					doc.setCreateDate(calendar);&#xd;
&#xd;
					doc.setDocumentType(&quot;1&quot;);&#xd;
&#xd;
					doc.setDocumentTypeId(&quot;1&quot;);&#xd;
&#xd;
					doc.setInheritSecurity(true);&#xd;
&#xd;
					doc.setTopicId(1);&#xd;
&#xd;
					doc.setUserNotify(false);&#xd;
&#xd;
					doc.setValidationStartDate(calendar);&#xd;
&#xd;
					doc.setVersionOption(&quot;0&quot;);&#xd;
&#xd;
					doc.setVolumeId(&quot;Default&quot;);			&#xd;
&#xd;
					document[0] = doc;&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
					var docArray         =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentDtoArray&quot;);&#xd;
&#xd;
					var docArraySecurity =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentSecurityConfigDtoArray&quot;);&#xd;
&#xd;
					var docArrayApprover =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.ApproverDtoArray&quot;);&#xd;
&#xd;
					docArray.setItem(document);&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
					// Cria o documento no Webdesk&#xd;
&#xd;
					log.info(&quot;CRIANDO DOCUMENTO&quot;);&#xd;
&#xd;
					var createDoc = documentServiceFolder.createFolder(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, docArray, docArraySecurity, docArrayApprover);&#xd;
&#xd;
					log.info(&quot;CRIADO&quot;);&#xd;
&#xd;
					log.info(createDoc);&#xd;
&#xd;
					var wsmes =  createDoc.getItem(0);&#xd;
&#xd;
					log.info(&quot;wsmesDocumentId&quot; + wsmes.getDocumentId());&#xd;
&#xd;
					log.info(&quot;wsmesgetVersion&quot; + wsmes.getVersion());&#xd;
&#xd;
					folderId = wsmes.getDocumentId();&#xd;
&#xd;
				}	&#xd;
&#xd;
			}&#xd;
&#xd;
			&#xd;
&#xd;
			/* verifica se já existe pasta para o fornecedor da nota*/&#xd;
&#xd;
			var c1 = DatasetFactory.createConstraint(&quot;parentDocumentId&quot;, folderId,folderId,ConstraintType.MUST);&#xd;
&#xd;
			var c2 = DatasetFactory.createConstraint(&quot;documentDescription&quot;, fornec,fornec,ConstraintType.MUST);&#xd;
&#xd;
			var c3 = DatasetFactory.createConstraint(&quot;activeVersion&quot;, &quot;true&quot;,&quot;true&quot;,ConstraintType.MUST);&#xd;
&#xd;
			var constraints = new Array(); &#xd;
&#xd;
			constraints.push(c1);&#xd;
&#xd;
			constraints.push(c2);&#xd;
&#xd;
			constraints.push(c3);&#xd;
&#xd;
			var pastaFornec = DatasetFactory.getDataset(&quot;document&quot;, null, constraints, null);&#xd;
&#xd;
&#xd;
	        if(pastaFornec){&#xd;
&#xd;
				log.info(&quot;entrou pasta fornec&quot;);&#xd;
&#xd;
				if(pastaFornec.values.length &gt; 0){&#xd;
&#xd;
					log.info(&quot;Valor do folderId...:&quot; + folderId);&#xd;
&#xd;
					var fornecParentId  = pastaFornec.getValue(0,&quot;documentPK.documentId&quot;);&#xd;
&#xd;
					var fornecNomePasta = pastaFornec.getValue(0,&quot;documentDescription&quot;);&#xd;
&#xd;
					folderId     = fornecParentId;&#xd;
&#xd;
					log.info(&quot;Valor do folderId/anoParentId/descricao...:&quot; + folderId + &quot; - &quot; + fornecParentId + &quot; - &quot; + fornecNomePasta);	&#xd;
&#xd;
				}&#xd;
&#xd;
				else{&#xd;
&#xd;
					/* Cria a pasta para o fornecedor da nota */&#xd;
&#xd;
					doc.setDocumentId(0);&#xd;
&#xd;
					doc.setVersion(0);&#xd;
&#xd;
					doc.setParentDocumentId(folderId); // FIXO&#xd;
&#xd;
					doc.setDocumentDescription(fornec);&#xd;
&#xd;
					doc.setAdditionalComments(&quot;Processo Nota Fiscal Pagamento&quot; );&#xd;
&#xd;
					doc.setDocumentKeyWord(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
					doc.setVersionDescription(&quot;\nProcesso:&quot; + processo);&#xd;
&#xd;
					doc.setDocumentTypeId(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
					doc.setExpires(false);&#xd;
&#xd;
					doc.setPublisherId(usuario);&#xd;
&#xd;
					doc.setIconId(23);&#xd;
&#xd;
					doc.setCompanyId(numcompany);&#xd;
&#xd;
					doc.setColleagueId(usuario);&#xd;
&#xd;
					doc.setApproved(true);&#xd;
&#xd;
					doc.setActiveVersion(true);&#xd;
&#xd;
					doc.setCreateDate(calendar);&#xd;
&#xd;
					doc.setDocumentType(&quot;1&quot;);&#xd;
&#xd;
					doc.setDocumentTypeId(&quot;1&quot;);&#xd;
&#xd;
					doc.setInheritSecurity(true);&#xd;
&#xd;
					doc.setTopicId(1);&#xd;
&#xd;
					doc.setUserNotify(false);&#xd;
&#xd;
					doc.setValidationStartDate(calendar);&#xd;
&#xd;
					doc.setVersionOption(&quot;0&quot;);&#xd;
&#xd;
					doc.setVolumeId(&quot;Default&quot;);			&#xd;
&#xd;
					document[0] = doc;&#xd;
&#xd;
&#xd;
&#xd;
					var docArray         =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentDtoArray&quot;);&#xd;
&#xd;
					var docArraySecurity =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentSecurityConfigDtoArray&quot;);&#xd;
&#xd;
					var docArrayApprover =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.ApproverDtoArray&quot;);&#xd;
&#xd;
					docArray.setItem(document);&#xd;
&#xd;
&#xd;
&#xd;
					// Cria o documento no Webdesk&#xd;
&#xd;
					log.info(&quot;CRIANDO DOCUMENTO&quot;);&#xd;
&#xd;
					var createDoc = documentServiceFolder.createFolder(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, docArray, docArraySecurity, docArrayApprover);&#xd;
&#xd;
					log.info(&quot;CRIADO&quot;);&#xd;
&#xd;
					log.info(createDoc);&#xd;
&#xd;
					var wsmfornec =  createDoc.getItem(0);&#xd;
&#xd;
					log.info(&quot;wsmfornecDocumentId&quot; + wsmfornec.getDocumentId());&#xd;
&#xd;
					log.info(&quot;wsmfornecgetVersion&quot; + wsmfornec.getVersion());&#xd;
&#xd;
					folderId = wsmfornec.getDocumentId();&#xd;
&#xd;
				}&#xd;
&#xd;
			}	&#xd;
&#xd;
&#xd;
&#xd;
			log.info(&quot;CRIANDO DOCUMENTO, DENTRO DE:...&quot; + folderId);&#xd;
&#xd;
			/* Cria a pasta com o número do pedido */&#xd;
&#xd;
			doc.setDocumentId(0);&#xd;
&#xd;
			doc.setVersion(0);&#xd;
&#xd;
			doc.setParentDocumentId(folderId); // FIXO&#xd;
&#xd;
			doc.setDocumentDescription(hAPI.getCardValue(&quot;NrPedido&quot;));&#xd;
&#xd;
			doc.setAdditionalComments(&quot;Processo Nota Fiscal Pagamento&quot; );&#xd;
&#xd;
			doc.setDocumentKeyWord(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
			doc.setVersionDescription(&quot;\nProcesso:&quot; + processo);&#xd;
&#xd;
			doc.setDocumentTypeId(&quot;Nota Fiscal&quot;);&#xd;
&#xd;
			doc.setExpires(false);&#xd;
&#xd;
			doc.setPublisherId(usuario);&#xd;
&#xd;
			doc.setIconId(23);&#xd;
&#xd;
			doc.setCompanyId(numcompany);&#xd;
&#xd;
			doc.setColleagueId(usuario);&#xd;
&#xd;
			doc.setApproved(true);&#xd;
&#xd;
			doc.setActiveVersion(true);&#xd;
&#xd;
			doc.setCreateDate(calendar);&#xd;
&#xd;
			doc.setDocumentType(&quot;1&quot;);&#xd;
&#xd;
			doc.setDocumentTypeId(&quot;1&quot;);&#xd;
&#xd;
			doc.setInheritSecurity(true);&#xd;
&#xd;
			doc.setTopicId(1);&#xd;
&#xd;
			doc.setUserNotify(false);&#xd;
&#xd;
			doc.setValidationStartDate(calendar);&#xd;
&#xd;
			doc.setVersionOption(&quot;0&quot;);&#xd;
&#xd;
			doc.setVolumeId(&quot;Default&quot;);			&#xd;
&#xd;
    		document[0] = doc;&#xd;
&#xd;
&#xd;
&#xd;
			var docArray         =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentDtoArray&quot;);&#xd;
&#xd;
			var docArraySecurity =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.DocumentSecurityConfigDtoArray&quot;);&#xd;
&#xd;
			var docArrayApprover =  documentServiceProviderFolder.instantiate(&quot;com.totvs.technology.ecm.dm.ws.ApproverDtoArray&quot;);&#xd;
&#xd;
			docArray.setItem(document);&#xd;
&#xd;
&#xd;
&#xd;
			// Cria o documento no Webdesk&#xd;
&#xd;
     		log.info(&quot;CRIANDO DOCUMENTO&quot;);&#xd;
&#xd;
			var createDoc = documentServiceFolder.createFolder(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, docArray, docArraySecurity, docArrayApprover);&#xd;
&#xd;
			log.info(&quot;CRIADO&quot;);&#xd;
&#xd;
			log.info(createDoc);&#xd;
&#xd;
			var wsm =  createDoc.getItem(0);&#xd;
&#xd;
			log.info(&quot;wsmDocumentId&quot; + wsm.getDocumentId());&#xd;
&#xd;
			log.info(&quot;wsmgetVersion&quot; + wsm.getVersion());&#xd;
&#xd;
			 &#xd;
			&#xd;
			log.info (&quot;NOTAFISCALPAGTO - pto xxxx  - anexo!&quot;);&#xd;
            &#xd;
            for (var i = 0; i &lt; listDocuments.size(); i++) {&#xd;
               log.info(&quot;NOTAFISCALPAGTO - cris1 ANEXAR OS ARQUIVOS NA PASTA ============== &quot; );&#xd;
                   &#xd;
               	var doclist = listDocuments.get(i);&#xd;
                   &#xd;
               	&#xd;
               	log.info(&quot;NOTAFISCALPAGTO -  BEFORETASKCOMPLETE - DOCS ANEXOS - fileName: &quot; + doclist.getPhisicalFile());&#xd;
                &#xd;
               	attach = documentServiceProvider.instantiate(&quot;com.totvs.technology.ecm.dm.ws.Attachment&quot;);&#xd;
                attach.setFileName(doclist.getPhisicalFile());&#xd;
				&#xd;
				log.info(&quot;NOTAFISCALPAGTO -  BEFORETASKCOMPLETE - DOCS ANEXOS - WKUser: &quot; +  getValue(&quot;WKUser&quot;));&#xd;
				log.info(&quot;NOTAFISCALPAGTO -  BEFORETASKCOMPLETE - DOCS ANEXOS - WKUserPassword: &quot; + getValue(&quot;WKUserPassword&quot;));&#xd;
				log.info(&quot;NOTAFISCALPAGTO -  BEFORETASKCOMPLETE - DOCS ANEXOS - numcompany: &quot; + numcompany);&#xd;
				log.info(&quot;NOTAFISCALPAGTO -  BEFORETASKCOMPLETE - DOCS ANEXOS - doclist.getDocumentId: &quot; + doclist.getDocumentId());&#xd;
				log.info(&quot;NOTAFISCALPAGTO -  BEFORETASKCOMPLETE - DOCS ANEXOS - doclist.getVersion: &quot; + doclist.getVersion());&#xd;
				log.info(&quot;NOTAFISCALPAGTO - BEFORETASKCOMPLETE - DOCS ANEXOS - doclist.getPhisicalFile: &quot; + doclist.getPhisicalFile());&#xd;
				//LOGININTEGRADOR,PASSWORDINTEGRADOR,USERCODEINTEGRADOR&#xd;
				&#xd;
				//attach.setFilecontent(documentService.getDocumentContent(getValue(&quot;WKUser&quot;), &quot;md5:&quot;+getValue(&quot;WKUserPassword&quot;), numcompany, doclist.getDocumentId(), getValue(&quot;WKUser&quot;), doclist.getVersion(), doclist.getPhisicalFile()));&#xd;
				attach.setFilecontent(documentService.getDocumentContent(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, doclist.getDocumentId(), getValue(&quot;WKUser&quot;), doclist.getVersion(), doclist.getPhisicalFile()));&#xd;
				attach.setPrincipal(true);&#xd;
               	&#xd;
                listAttach[0] = attach;&#xd;
                attachArray = documentServiceProvider.instantiate(&quot;com.totvs.technology.ecm.dm.ws.AttachmentArray&quot;);&#xd;
&#xd;
&#xd;
               attachArray.setItem(listAttach);&#xd;
&#xd;
               log.info(&quot;ANEXAR OS ARQUIVOS NA PASTA ============== DADOS DO METODO - LOGININTEGRADOR: &quot; + LOGININTEGRADOR + &quot; - USERCODEINTEGRADOR: &quot;+ USERCODEINTEGRADOR +&quot; : &quot;+PASSWORDINTEGRADOR+&quot; : &quot;+numcompany+&quot; : &quot;+doclist.getDocumentId()+&quot; : &quot;+doclist.getVersion() + &quot; : &quot;+usuario);&#xd;
               &#xd;
               //document = documentService.getDocumentVersion(USERCODEINTEGRADOR, PASSWORDINTEGRADOR, numcompany, doclist.getDocumentId(), doclist.getVersion(), usuario);&#xd;
               document = documentService.getDocumentVersion(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, doclist.getDocumentId(), doclist.getVersion(), usuario);&#xd;
               &#xd;
               log.info(&quot;ANEXAR OS ARQUIVOS NA PASTA ============== pto 1&quot; );&#xd;
               &#xd;
               doc = document.getItem(0);&#xd;
               doc.setDocumentId(0);&#xd;
               doc.setVersion(0);&#xd;
               doc.setParentDocumentId(wsm.getDocumentId()); // FIXO&#xd;
               doc.setDocumentDescription(doclist.getPhisicalFile());&#xd;
               doc.setAdditionalComments(&quot;Processo Nota Fiscal Pagamento&quot;);&#xd;
               doc.setDocumentKeyWord(&quot;Processo Nota Fiscal Pagamento&quot;);&#xd;
               doc.setVersionDescription(&quot;\nProcesso:&quot; + processo);&#xd;
               doc.setExpires(false);&#xd;
               doc.setPublisherId(usuario);&#xd;
               doc.setIconId(21);&#xd;
               doc.setCompanyId(numcompany);&#xd;
               doc.setColleagueId(usuario);&#xd;
               doc.setApproved(true);&#xd;
               doc.setActiveVersion(true);&#xd;
               doc.setCreateDate(calendar);&#xd;
               doc.setDocumentType(&quot;1&quot;);&#xd;
               doc.setInheritSecurity(true);&#xd;
               doc.setTopicId(1);&#xd;
               doc.setUserNotify(false);&#xd;
               doc.setValidationStartDate(calendar);&#xd;
               &#xd;
               log.info(&quot;ANEXAR OS ARQUIVOS NA PASTA ============== pto 2&quot; );&#xd;
               &#xd;
               doc.setVersionOption(&quot;0&quot;);&#xd;
               doc.setVolumeId(&quot;Default&quot;);&#xd;
&#xd;
               try  {&#xd;
                      doc.setUpdateIsoProperties(true);&#xd;
               }&#xd;
               catch(e){&#xd;
                      log.info(&quot;erro ao tentar doc.setUpdateIsoProperties(true);&quot;);&#xd;
               }&#xd;
               document.setItem(0, doc);&#xd;
            &#xd;
	            // Cria o documento no Webdesk&#xd;
	            try{&#xd;
	                  log.info(&quot;PUBLICANDO DOCUMENTO&quot;);&#xd;
	                  //var createDoc = documentService.createDocument(USERCODEINTEGRADOR, PASSWORDINTEGRADOR, numcompany, document, attachArray, null, null, null);&#xd;
	                  var createDoc = documentService.createDocument(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, document, attachArray, null, null, null);&#xd;
	                  log.info(&quot;PUBLICADO&quot;);&#xd;
	                  log.info(createDoc);&#xd;
	            }&#xd;
	            catch(e){&#xd;
	                   log.info(&quot;erro ao tentar publicar os anexos, favor verificar!&quot; + e.message);&#xd;
	                   form.setValue(&quot;idErro&quot;,&quot;Erro ao tentar publicar os anexos, Caso nao tenha publicado os anexos, contate a Area de Atendimento FLUIG.&quot;);&#xd;
	            }&#xd;
	        }&#xd;
            &#xd;
            &#xd;
/* logica antiga&#xd;
&#xd;
&#xd;
			//Publicar o documento na pasta &#xd;
&#xd;
			for (var i = 0; i &lt; listDocuments.size(); i++) {&#xd;
&#xd;
				log.info(&quot;ANEXAR OS ARQUIVOS NA PASTA ============== &quot; );&#xd;
&#xd;
				// SeÃ§Ã£o para atachar o arquivo ao documento &#xd;
&#xd;
				attach = documentServiceProvider.instantiate(&quot;com.totvs.technology.ecm.dm.ws.Attachment&quot;);&#xd;
&#xd;
				attach.setFileName(listDocuments[i].getPhisicalFile());&#xd;
&#xd;
				log.info(&quot;fileName: &quot; + listDocuments[i].getPhisicalFile());&#xd;
&#xd;
				attach.setFilecontent(listDocuments[i].getFileContent());&#xd;
&#xd;
				attach.setPrincipal(true);&#xd;
&#xd;
				listAttach[0] = attach;&#xd;
&#xd;
				attachArray = documentServiceProvider.instantiate(&quot;com.totvs.technology.ecm.dm.ws.AttachmentArray&quot;);&#xd;
&#xd;
				attachArray.setItem(listAttach);&#xd;
&#xd;
	&#xd;
&#xd;
				log.info(&quot;Inicio publicar Documento&quot; );&#xd;
				log.info(&quot;getDocumentId...:&quot; + listDocuments[i].getDocumentId() + &quot; - &quot; + &quot;version...:&quot; + listDocuments[i].getVersion() + &quot; - &quot; + &quot;usuario..: &quot; + usuario);&#xd;
&#xd;
				document = documentService.getDocumentVersion(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, listDocuments[i].getDocumentId(), listDocuments[i].getVersion(), usuario);&#xd;
&#xd;
	&#xd;
&#xd;
				doc = document.getItem(0);&#xd;
&#xd;
				doc.setDocumentId(0);&#xd;
&#xd;
				doc.setVersion(0);&#xd;
&#xd;
				doc.setParentDocumentId(wsm.getDocumentId()); // FIXO&#xd;
&#xd;
				doc.setDocumentDescription(listDocuments[i].getPhisicalFile());&#xd;
&#xd;
				doc.setAdditionalComments(&quot;Processo Nota Fiscal Pagamento&quot;);&#xd;
&#xd;
				doc.setDocumentKeyWord(&quot;Processo Nota Fiscal Pagamento&quot;);&#xd;
&#xd;
				doc.setVersionDescription(&quot;\nProcesso:&quot; + processo);&#xd;
&#xd;
				doc.setDocumentTypeId(&quot;\nProcesso:&quot; + processo);&#xd;
&#xd;
				doc.setExpires(false);&#xd;
&#xd;
				doc.setPublisherId(usuario);&#xd;
&#xd;
				doc.setIconId(21);&#xd;
&#xd;
				doc.setCompanyId(numcompany);&#xd;
&#xd;
				doc.setColleagueId(usuario);&#xd;
&#xd;
				doc.setApproved(true);&#xd;
&#xd;
				doc.setActiveVersion(true);&#xd;
&#xd;
				doc.setCreateDate(calendar);&#xd;
&#xd;
				doc.setDocumentType(&quot;1&quot;);&#xd;
&#xd;
				doc.setDocumentTypeId(&quot;1&quot;);&#xd;
&#xd;
				doc.setInheritSecurity(true);&#xd;
&#xd;
				doc.setTopicId(1);&#xd;
&#xd;
				doc.setUserNotify(false);&#xd;
&#xd;
				doc.setValidationStartDate(calendar);&#xd;
&#xd;
&#xd;
&#xd;
				// Mantem a versÃ£o atual do documento&#xd;
&#xd;
    			doc.setVersionOption(&quot;0&quot;);&#xd;
&#xd;
				doc.setVolumeId(&quot;Default&quot;);&#xd;
&#xd;
				try&#xd;
&#xd;
				{&#xd;
&#xd;
					doc.setUpdateIsoProperties(true);&#xd;
&#xd;
				}&#xd;
&#xd;
				catch(e)&#xd;
&#xd;
				{&#xd;
&#xd;
					log.info(&quot;erro ao tentar doc.setUpdateIsoProperties(true);&quot;);&#xd;
&#xd;
				}&#xd;
&#xd;
    			document.setItem(0, doc);&#xd;
&#xd;
&#xd;
				// Cria o documento no Webdesk&#xd;
    			try{&#xd;
					log.info(&quot;PUBLICANDO DOCUMENTO&quot;);&#xd;
					var createDoc = documentService.createDocument(LOGININTEGRADOR, PASSWORDINTEGRADOR, numcompany, document, attachArray, null, null, null);&#xd;
					log.info(&quot;PUBLICADO&quot;);&#xd;
					log.info(createDoc);&#xd;
    			}&#xd;
    			catch(e){&#xd;
    				log.info(&quot;erro ao tentar publicar os anexos, favor verificar!&quot; + e.message);&#xd;
    				hAPI.setCardValue(&quot;idErro&quot;,&quot;Erro ao tentar publicar os anexos, Caso não tenha publicado os anexos, contate a área de Atendimento FLUIG.&quot;);&#xd;
    			}&#xd;
&#xd;
			}&#xd;
			*/&#xd;
&#xd;
		}&#xd;
		&#xd;
	}&#xd;
&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterProcessCreate</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterProcessCreate(processId) {&#xd;
	var identificador = hAPI.getCardValue(&quot;idCNPJ_canal&quot;) + hAPI.getCardValue(&quot;idCodigo_fornecedor&quot;);&#xd;
	var dataset = DatasetFactory.getDataset(&quot;ds_sql_consulta_fluig&quot;, [ &quot;SELECT MD5(&apos;&quot; + identificador + &quot;&apos;) AS MD5&quot; ], null, null);&#xd;
	var MD5 = dataset.getValue(0,&quot;MD5&quot;);&#xd;
	hAPI.setCardValue(&quot;identificador&quot;,MD5);&#xd;
	hAPI.setCardValue(&quot;acesso&quot;,MD5.substring(0,2) + MD5.substring(10,12) + MD5.substring(20,22) + MD5.substring(29,31));&#xd;
&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterStateEntry</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterStateEntry(sequenceId){&#xd;
	var atividade = retornaAtividade(sequenceId);&#xd;
	hAPI.setCardValue(&quot;localizacao&quot;,atividade);&#xd;
}&#xd;
function retornaAtividade(atividade){&#xd;
	switch (atividade) {&#xd;
	case 0:&#xd;
		return &quot;Pendente anexar a nota fiscal&quot;;&#xd;
		break;&#xd;
	case 4:&#xd;
		return &quot;Pendente anexar a nota fiscal&quot;;&#xd;
		break;&#xd;
	case 14:&#xd;
		return &quot;Verificar Inconsistencias&quot;;&#xd;
		break;&#xd;
	case 12:&#xd;
		return &quot;Processando pagamento&quot;;&#xd;
		break;&#xd;
	case 17:&#xd;
		return &quot;Processando pagamento&quot;;&#xd;
		break;&#xd;
	case 20:&#xd;
		return &quot;Processando pagamento&quot;;&#xd;
		break;&#xd;
		&#xd;
	default:&#xd;
		return &quot;Processo finalizado&quot;;&#xd;
		break;&#xd;
	}&#xd;
	&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>validateAvailableStates</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function validateAvailableStates(iCurrentState,stateList){}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeTaskSave</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeTaskSave(colleagueId,nextSequenceId,userList){}   </eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>onNotify</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function onNotify(subject, receivers, template, params){}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterTaskSave</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterTaskSave(colleagueId,nextSequenceId,userList){}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterStateLeave</eventId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterStateLeave(sequenceId){}</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list/>
  <list>
    <SwimLane>
      <color>FFFFFF</color>
      <height>611</height>
      <width>851</width>
      <positionX>10</positionX>
      <positionY>10</positionY>
      <stateName>Pool</stateName>
      <type>1</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFF80</color>
      <height>203</height>
      <width>821</width>
      <positionX>40</positionX>
      <positionY>10</positionY>
      <stateName>Solicitante</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>80FF80</color>
      <height>203</height>
      <width>821</width>
      <positionX>40</positionX>
      <positionY>213</positionY>
      <stateName>Contas a Pagar</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>82b0b7</color>
      <height>205</height>
      <width>821</width>
      <positionX>40</positionX>
      <positionY>416</positionY>
      <stateName>Fiscal</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
        <version>1</version>
        <sequence>4</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list/>
  <list/>
  <list/>
  <list/>
  <list/>
  <list/>
  <list/>
  <list/>
  <list>
    <ProcessAppConfiguration>
      <id>0</id>
      <tenantId>0</tenantId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
      <processVersion>12</processVersion>
      <stateSequence>12</stateSequence>
      <appKey>approval</appKey>
      <appField>title</appField>
      <description></description>
    </ProcessAppConfiguration>
    <ProcessAppConfiguration>
      <id>0</id>
      <tenantId>0</tenantId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
      <processVersion>12</processVersion>
      <stateSequence>12</stateSequence>
      <appKey>approval</appKey>
      <appField>description</appField>
      <description></description>
    </ProcessAppConfiguration>
    <ProcessAppConfiguration>
      <id>0</id>
      <tenantId>0</tenantId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
      <processVersion>12</processVersion>
      <stateSequence>12</stateSequence>
      <appKey>approval</appKey>
      <appField>highlight</appField>
      <description></description>
    </ProcessAppConfiguration>
    <ProcessAppConfiguration>
      <id>0</id>
      <tenantId>0</tenantId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
      <processVersion>12</processVersion>
      <stateSequence>12</stateSequence>
      <appKey>approval</appKey>
      <appField>approve</appField>
      <description></description>
    </ProcessAppConfiguration>
    <ProcessAppConfiguration>
      <id>0</id>
      <tenantId>0</tenantId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
      <processVersion>12</processVersion>
      <stateSequence>12</stateSequence>
      <appKey>approval</appKey>
      <appField>reject</appField>
      <description></description>
    </ProcessAppConfiguration>
  </list>
  <list>
    <ProcessAttachmentRules>
      <id>0</id>
      <tenantId>0</tenantId>
      <processId>TESTE CONTAS A PAGAR COMISSOES</processId>
      <processVersion>12</processVersion>
      <stateSequence>4</stateSequence>
      <operator>2</operator>
      <amount>0</amount>
      <name></name>
      <message>Anexar arquivos.</message>
    </ProcessAttachmentRules>
  </list>
  <list/>
</list>